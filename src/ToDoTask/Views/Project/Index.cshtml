@using ToDoTask.Helpers;
@using ToDoTask.Constants;
@using ToDoTask.Data.Entities;
@model IEnumerable<ToDoTask.Data.Entities.Project>

@{
    ViewData["Title"] = "List Project";
    Layout = "~/Views/Shared/_Layout.cshtml";
    PagingModel pagingModel = null;
    if (ViewBag.CurrentPage != null)
    {
        pagingModel = new PagingModel()
                {
                    currentPage = ViewBag.CurrentPage,
                    countPages = ViewBag.CountPage,
                    generateUrl = (int? p) => Url.Action("Index", new { page = p })
                };
    }
    
}
@if(Model != null){
<h1>Danh sách dự án</h1>
<div>
    <!-- Topbar -->
    <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">
        <!-- Sidebar Toggle (Topbar) -->
        <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
            <i class="fa fa-bars"></i>
        </button>
        <!-- Topbar Search -->
        
            <div class="form-actions no-color">
                <p>
                    <input id = "IdInput" /> 
                   <button id="searchTo" onclick="Show()">Tìm Kiếm</button>
                </p>
            </div>
       
        <!-- Topbar Navbar -->
    </nav>
    <!-- End of Topbar -->
<p>
    <a asp-action="Create" class="btn btn-primary">Tạo mới</a>
</p>
 <table class="table" id="tableData">
    <thead>
        <tr>
            <th>Project Name</th>
            @*<th>Description</th>*@
            <th>Status</th>
            <th>Date Created</th>
            <th>DateLine</th>
            <th>Create By</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>*@
            <td>
                @switch (item.Status)
                {
                    case (int)Status.Waitting:
                        {
                            <p>@Status.Waitting</p>
                            break;
                        }
                    case (int)Status.Processing:
                        {
                            <p>@Status.Processing</p>
                            break;
                        }
                    case (int)Status.Done:
                        {
                            <p>@Status.Done</p>
                            break;
                        }
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateLine)
            </td>
            <td>
                @foreach (var user in ViewBag.User){
                    if (item.UserId == user.UserId)
                    {
                                @Html.Raw(user.NameUser)
                                break;
                    }
                }
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                <button onclick="DeleteProject('@item.Id')">Delete</button>
            </td>
        </tr>
    }
    </tbody>
</table>
        @if (pagingModel != null)
        {
            <partial name="_Paging" model="@pagingModel" />
        }
</div>
}
else{
<h4>Không có dự án nào</h4>
<a asp-action="Create" asp-controller="Project">Tạo mới dự án</a>
}
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
       function Show(){
            var keySearch = $('#IdInput').val();
            
            $.ajax({
                type: 'GET',
                url: '/Project/Search?keySearch=' + keySearch,
                dataType: 'json',
                success: function (data) {
                    // Đổ dữ liệu lên view
               
                    var html = '';
                    $.each(data, function (index, item) {
                        html += '<tr>';
                        html += '<td>' + item.name + '</td>';
                        html += '<td>' + item.status + '</td>';
                        html += '<td>' + item.createdAt + '</td>';
                        html += '<td>' + item.dateLine + '</td>';
                        html += '<td>' + item.userName + '</td>';
                        html += '<td><a href="/Project/Edit?id=' + item.id + '">Edit </a>'
                            + '<button onclick="DeleteProject(\'' + item.id + '\')"> Delete</button></td>';
                        html += '</tr>';
                    });
                    $('#tableData tbody').html(html);
                }
            });
       }
        function DeleteProject(id){
            if(confirm("Are you sure?") == true){
                $.ajax({
                    type: 'get',
                    url: '/Project/Delete?id=' + id,
                    dataType: 'text',
                    success: function (data) {
                        alert("Thành công");
                        location.reload();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert("Thất bại");
                    }
                });
            }
            
        }

    </script>
}
