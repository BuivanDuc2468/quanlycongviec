@using ToDoTask.Constants;
@model ToDoTask.Models.Contents.UserRoleView

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Edit</h1>

<h4></h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group mt-3">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>
            <div class="form-group mt-3">
                <label asp-for="RoleName" class="control-label"></label>
                <select class="form-control" name="RoleId" asp-items="@(new SelectList(ViewBag.Roles, "Id", "Name"))"></select>
                <span asp-validation-for="RoleName" class="text-danger"></span>
            </div>
            <div class="form-group mt-5">
                <input type="submit" asp-route-Id="@Model.UserId" asp-route-idr="@Model.RoleId" value="Update" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
