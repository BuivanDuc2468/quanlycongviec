@using ToDoTask.Constants;
@using ToDoTask.Helpers;
@using ToDoTask.Models.Contents;
@model IEnumerable<JobForView>
@{
    ViewData["Title"] = "ListJob Waitting";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var pagingModel = new PagingModel()
            {
                currentPage = ViewBag.CurrentPage,
                countPages = ViewBag.CountPage,
                generateUrl = (int? p) => Url.Action("ListJobWaitting", new { page = p })
            };
}

<h1>List Job Waitting</h1>
@if (Model != null)
{
    <nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">
        <!-- Sidebar Toggle (Topbar) -->
        <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
            <i class="fa fa-bars"></i>
        </button>
        <!-- Topbar Search -->
        <form asp-action="ListJobWaitting" method="get">
            <div class="form-actions no-color">
                <p>
                    Find: <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" />
                    <input type="submit" value="Search" class="btn btn-default" />
                </p>
            </div>
        </form>
        <!-- Topbar Navbar -->
    </nav>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UserName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateAssign)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateLine)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateAssign)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateLine)
                    </td>
                    <td>
                        <select name="Status" id="Status.@item.Id">
                            <option value="@Convert.ToInt32(Status.Waitting)" selected>Waitting</option>
                            <option value="@Convert.ToInt32(Status.Processing)">Processing</option>
                        </select>
                    </td>
                    <td>
                        <button><a onclick="SaveStatusOfJob(@item.Id)">Save</a></button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <partial name="_Paging" model="@pagingModel" />

}
    @section Scripts{
    <script>
            function SaveStatusOfJob(id){
                let x= 'Status.'+id;
                let d = document.getElementById(x).value;
                $.ajax({
                    url: "/Job/UpdateJob",
                    type: "get",
                    data: "id="+id + "&status="+ d,
                    dataType: 'json',
                    success: function (data) {
                    },
                    error: function (e) {
                        console.log(e.message);
                    }
                }).done(function () {
                    location.reload();
                    }
                );
            }
    </script>
    }