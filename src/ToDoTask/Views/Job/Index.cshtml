@using ToDoTask.Constants;
@using ToDoTask.Data.Entities;
@using ToDoTask.Helpers;
@model IEnumerable<ToDoTask.Data.Entities.Job>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var pagingModel = new PagingModel()
            {
                currentPage = ViewBag.CurrentPage,
                countPages = ViewBag.CountPage,
                generateUrl = (int? p) => Url.Action("Index", new { page = p })
            };
}

<h1>List Job</h1>
<nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">
    <!-- Sidebar Toggle (Topbar) -->
    <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
        <i class="fa fa-bars"></i>
    </button>
    <!-- Topbar Search -->
    <form asp-action="Index" method="get">
        <div class="form-actions no-color">
            <p>
                Find: <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" />
                <input type="submit" value="Search" class="btn btn-default" />
            </p>
        </div>
    </form>
    <!-- Topbar Navbar -->
</nav>
<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProjectId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                User Name
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateStart)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateComplete)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @foreach (var p in ViewBag.Project as ICollection<Project>)
                {
                    if (item.ProjectId == p.Id)
                    {
                        @Html.DisplayFor(modelItem => p.Name)
                    }
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @foreach (var user in ViewBag.Users)
                {
                    if (item.UserId == user.UserId)
                    {
                        @Html.Raw(user.NameUser)
                        break;
                    }
                }
            </td>
            <td>
                @switch (item.Status)
                {
                    case (int)Status.Waitting:
                        {
                            <p>@Status.Waitting</p>
                            break;
                        }
                    case (int)Status.Processing:
                        {
                            <p>@Status.Processing</p>
                            break;
                        }

                    case (int)Status.Done:
                        {
                            <p>@Status.Done</p>
                            break;
                        }
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateStart)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateComplete)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<partial name="_Paging" model="@pagingModel" />