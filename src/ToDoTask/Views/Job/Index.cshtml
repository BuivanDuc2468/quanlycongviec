@using ToDoTask.Constants;
@using ToDoTask.Data.Entities;
@using ToDoTask.Helpers;
@model IEnumerable<ToDoTask.Data.Entities.Job>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var pagingModel = new PagingModel()
            {
                currentPage = ViewBag.CurrentPage,
                countPages = ViewBag.CountPage,
                generateUrl = (int? p) => Url.Action("Index", new { page = p })
            };
}

<h1>List Job</h1>
<nav class="navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow">
    <!-- Sidebar Toggle (Topbar) -->
    <button id="sidebarToggleTop" class="btn btn-link d-md-none rounded-circle mr-3">
        <i class="fa fa-bars"></i>
    </button>
    <!-- Topbar Search -->
  
    <div class="form-actions no-color">
        <p>
            <input id="IdInput" />
            <button id="searchTo" onclick="Show()">Tìm Kiếm</button>
        </p>
    </div>
  
    <!-- Topbar Navbar -->
</nav>
<p>
    <a asp-action="Create" class="btn btn-primary">Tạo mới</a>
</p>
<table class="table" id="tableData">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProjectId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                Người dùng
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateStart)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DateComplete)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @foreach (var p in ViewBag.Project as ICollection<Project>)
                {
                    if (item.ProjectId == p.Id)
                    {
                        @Html.DisplayFor(modelItem => p.Name)
                    }
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @foreach (var user in ViewBag.Users)
                {
                    if (item.UserId == user.UserId)
                    {
                        @Html.Raw(user.NameUser)
                        break;
                    }
                }
            </td>
            <td>
                @switch (item.Status)
                {
                    case (int)Status.Waitting:
                        {
                            <p>@Status.Waitting</p>
                            break;
                        }
                    case (int)Status.Processing:
                        {
                            <p>@Status.Processing</p>
                            break;
                        }

                    case (int)Status.Done:
                        {
                            <p>@Status.Done</p>
                            break;
                        }
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateStart)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateComplete)
            </td>
            <td>
                <button><a asp-action="Edit" asp-route-id="@item.Id">Edit</a></button>
                <button onclick="DeleteJob('@item.Id')">Delete</button>
            </td>
        </tr>
}
    </tbody>
</table>
<partial name="_Paging" model="@pagingModel" />
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function Show() {
            var keySearch = $('#IdInput').val();

            $.ajax({
                type: 'GET',
                url: '/Job/Search?keySearch=' + keySearch,
                dataType: 'json',
                success: function (data) {
                    // Đổ dữ liệu lên view
                    
                    var html = '';
                    $.each(data, function (index, item) {
                        html += '<tr>';
                        html += '<td>' + item.projectName + '</td>';
                        html += '<td>' + item.name + '</td>';
                        html += '<td>' + item.userName + '</td>';
                        html += '<td>' + item.status + '</td>';
                        html += '<td>' + item.dateStart + '</td>';
                        html += '<td>' + item.dateComplete + '</td>';
                        html += '<td><a href="/Job/Edit?id=' + item.id + '">Edit </a>'
                            + '<button onclick="DeleteJob(\'' + item.id + '\')"> Delete</button></td>';
                        html += '</tr>';
                    });
                    $('#tableData tbody').html(html);
                }
            });
        }
        function DeleteJob(id) {
            if (confirm("Are you sure?") == true) {
                $.ajax({
                    type: 'get',
                    url: '/Job/Delete?id=' + id,
                    dataType: 'text',
                    success: function (data) {
                        alert("Thành công");
                        location.reload();
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        alert("Thất bại");
                    }
                });
            }

        }

    </script>
}
